// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TreeCmpWebAPI.Data;

#nullable disable

namespace TreeCmpWebAPI.Migrations
{
    [DbContext(typeof(NewickDbContext))]
    partial class NewickDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TreeCmpWebAPI.Models.Domain.Newick", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("bifurcationTreesOnly")
                        .HasColumnType("bit");

                    b.Property<string>("comparisionMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("includeSummary")
                        .HasColumnType("bit");

                    b.Property<string>("newickFirstString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("newickSecondString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("normalizedDistances")
                        .HasColumnType("bit");

                    b.Property<bool?>("pruneTrees")
                        .HasColumnType("bit");

                    b.Property<string>("rootedMetrics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unrootedMetrics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("windowWidth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("zeroWeightsAllowed")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Newicks");
                });

            modelBuilder.Entity("TreeCmpWebAPI.Models.Domain.NewickResponseFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FileContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FileGeneratedTimestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OperationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResponseFiles", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
